-- Criação do Banco de dados

DROP DATABASE IF EXISTS GAME_OF_THRONES;
CREATE DATABASE GAME_OF_THRONES;
USE GAME_OF_THRONES;


-- Tabelas Importadas do SQL gerado no site

CREATE TABLE HOUSES (
  HOUSENAME varchar(35),
  REGION varchar(30)
);


CREATE TABLE CHARACTERS (
  `CHARACTER` varchar(35),
  ACTOR_ESS varchar(30),
  EPISODES_APPEARED varchar(2),
  FIRST_APPEARANCE char(4),
  LAST_APPEARANCE char(4)
);

CREATE TABLE EPISODES (
  SEASON char(1),
  EPISODE varchar(2),
  TITLE varchar(50),
  RATING float,
  VOTES varchar(6),
  SUMMARY varchar(240),
  WRITTER1 varchar(20),
  WRITTER2 varchar(15),
  STAR1 varchar(22),
  STAR2 varchar(22),
  STAR3 varchar(22),
  USERS_REVIEWS varchar(4),
  CRITICS_REVIEWS varchar(2),
  US_VIEWERS float,
  DURATION varchar(2),
  DIRECTOR varchar(20)
);


-- Povoar Tabelas com CSVs de Game of Thrones em https://drive.google.com/drive/folders/1F9Rwbzzz4LJCxZU-mTR4JqDT_2vJ7-sC?usp=sharing
-- Teste das tabelas povoadas corretamente

SELECT * FROM CHARACTERS;
SELECT * FROM EPISODES;
SELECT * FROM HOUSES;


-- Criando PK em `CHARACTERS` E FK EM `EPISODES`

ALTER TABLE CHARACTERS ADD PRIMARY KEY (ACTOR_ESS);
ALTER TABLE `EPISODES` ADD CONSTRAINT fk_ACTOR_ESS_ID FOREIGN KEY (`STAR1`) REFERENCES `CHARACTERS`(`ACTOR_ESS`);


-- Filtro para gráfico "TOP 10 QUANTIDADE DE CASAS POR REGIÃO"

SELECT `REGION`,COUNT(*) AS TOTAL FROM `HOUSES` GROUP BY `REGION` ORDER BY TOTAL DESC LIMIT 10
INTO OUTFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/REGIONS.csv' 
FIELDS TERMINATED BY ","
ENCLOSED BY '"' 
LINES TERMINATED BY '\n';


-- Filtro para gráfico " PERSONAGENS VIVOS POR MAIS TEMPO E EM QUANTOS EPISÓDIOS APARECERAM"

SELECT *, LAST_APPEARANCE-FIRST_APPEARANCE AS TOTAL FROM `CHARACTERS`ORDER BY TOTAL DESC LIMIT 17
INTO OUTFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/TOP_APEA.csv' 
FIELDS TERMINATED BY ","
ENCLOSED BY '"' 
LINES TERMINATED BY '\n';


-- Filtro para Gráfico "TEMPORADAS MELHOR AVALIADAS"
SET @row_number:=0; 
SET @`GRUPO`:='';

SELECT `GRUPO`, ROUND (AVG (`RATING`),2) AS `MEDIA`
FROM (SELECT  @row_number:=CASE WHEN @`GRUPO` = `SEASON` THEN @row_number + 1 ELSE 1 END AS COUNT,
    @`GRUPO`:=`SEASON` AS `GRUPO`, `SEASON`, `RATING`, (SELECT COUNT(*) 
    FROM `EPISODES` WHERE a.`SEASON` = `SEASON`) AS `TOTAL`
FROM (SELECT  `SEASON`,`RATING` FROM `EPISODES` ORDER BY `SEASON`,`RATING`) as a) AS b
WHERE `COUNT` BETWEEN `TOTAL` / 2.0 AND `TOTAL` / 2.0 + 1
GROUP BY `GRUPO` ORDER BY `MEDIA` DESC
INTO OUTFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/SEASON_RATING.csv' 
FIELDS TERMINATED BY ","
ENCLOSED BY '"' 
LINES TERMINATED BY '\n';


COMMIT;
SET AUTOCOMMIT = 0;